trigger:
- main 

pool:
  vmImage: 'ubuntu-latest'
# Installs Node and the npm packages saved in your package.json file in the build
stages:
  - stage: build_adf
    displayName: Build ADF artifact
    jobs:
      - job: Creating
        displayName: "Creating Artifact"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '10.x'
            displayName: 'Install Node.js'

          - task: Npm@1
            inputs:
              command: 'install'
              workingDir: '$(Build.Repository.LocalPath)/ADFIntegration/DevOpsFiles' 
              verbose: true
            displayName: 'Install npm package'

# Validates all of the Data Factory resources in the repository. You'll get the same validation errors as when "Validate All" is selected.
# Enter the appropriate subscription and name for the source factory.

          - task: Npm@1
            inputs:
              command: 'custom'
              workingDir: '$(Build.Repository.LocalPath)/ADFIntegration/DevOpsFiles' #package.json folder
              customCommand: 'run build validate $(Build.Repository.LocalPath)/ADFIntegration /subscriptions/$(resourcegroupid)/resourceGroups/$(resourcegroup)/providers/Microsoft.DataFactory/factories/$(adfname)'
            displayName: 'Validate'

# Validate and then generate the ARM template into the destination folder, which is the same as selecting "Publish" from the UX.
# The ARM template generated isn't published to the live version of the factory. Deployment should be done by using a CI/CD pipeline. 

          - task: Npm@1
            inputs:
              command: 'custom'
              workingDir: '$(Build.Repository.LocalPath)/ADFIntegration/DevOpsFiles'
              customCommand: 'run build export $(Build.Repository.LocalPath)/ADFIntegration /subscriptions/$(resourcegroupid)/resourceGroups/$(resourcegroup)/providers/Microsoft.DataFactory/factories/$(adfname) "ArmTemplate"'  
            displayName: 'Validate and Generate ARM template'

# Publish the artifact to be used as a source for a release pipeline.

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Build.Repository.LocalPath)/ADFIntegration/DevOpsFiles/ArmTemplate' 
              artifact: 'ArmTemplates'
              publishLocation: 'pipeline'

#release pipeline
  - stage: 'UAT'
    displayName: 'UAT deploy'
    dependsOn: build_adf
    variables:
      dataFactoryName: $(adfuatname)
    jobs:
      - deployment: DeploytoUAT
        pool:
          vmImage: 'ubuntu-latest'
        environment: UAT
        strategy:
          runOnce:
            preDeploy:
              steps:
                - task: DownloadPipelineArtifact@2
                  inputs:
                    buildType: current
                    artifactName: 'ArmTemplates'
                    targetPath: '$(Build.Repository.LocalPath)/ADFIntegration/DevOpsFiles'
                  displayName: Downloading Artifact
                - task: AzureResourceManagerTemplateDeployment@3
                  displayName: 'Deploying to UAT RG task'
                  inputs:
                    deploymentScope: Resource Group
                    azureResourceManagerConnection: '$(myserviceconnection)'
                    subscriptionId: '$(subscriptionid)'
                    action: Create Or Update Resource Group
                    resourceGroupName: '$(rguatname)'
                    location: '$(UATlocation)'
                    templateLocation: Linked artifact
                    csmFile: '$(Pipeline.Workspace)/ArmTemplates/ARMTemplateForFactory.json'
                    csmParametersFile: '$(Pipeline.Workspace)/ArmTemplates/ARMTemplateParametersForFactory.json'
                    overrideParameters: '-factoryName $(adfuatname) -AzureBlobStorage1_properties_typeProperties_connectionString_secretName $(UATsecretname) -AzureKeyVaultdemoservice_properties_typeProperties_baseUrl $(UATkeyurl)'
                    deploymentMode: Incremental


                    
            
            


    